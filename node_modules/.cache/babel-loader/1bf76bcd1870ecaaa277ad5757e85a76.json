{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guadalupe\\\\Documents\\\\NetBeansProjects\\\\Course\\\\translate\\\\src\\\\contexts\\\\LanguageContext.js\";\nimport React from \"react\";\nconst Context = React.createContext(\"english\");\nexport class LanguageStore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: \"\"\n    };\n\n    this.onLanguageChange = language => {\n      console.log(language);\n      this.setState = {\n        language\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: { ...this.state,\n        onLanguageChange: this.onLanguageChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nexport default Context;","map":{"version":3,"sources":["C:/Users/Guadalupe/Documents/NetBeansProjects/Course/translate/src/contexts/LanguageContext.js"],"names":["React","Context","createContext","LanguageStore","Component","state","language","onLanguageChange","console","log","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,CAAoB,SAApB,CAAhB;AAEA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADyC;;AAAA,SAGjDC,gBAHiD,GAG7BD,QAAD,IAAc;AAC/BE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,GAAgB;AAAEJ,QAAAA;AAAF,OAAhB;AACD,KANgD;AAAA;;AAQjDK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD,CAAS,QAAT;AACE,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKN,KAAV;AAAiBE,QAAAA,gBAAgB,EAAE,KAAKA;AAAxC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKK,KAAL,CAAWC,QAHd,CADF;AAOD;;AAhBgD;AAmBnD,eAAeZ,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext(\"english\");\r\n\r\nexport class LanguageStore extends React.Component {\r\n  state = { language: \"\" };\r\n\r\n  onLanguageChange = (language) => {\r\n    console.log(language);\r\n    this.setState = { language };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={{ ...this.state, onLanguageChange: this.onLanguageChange }}\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Context;\r\n"]},"metadata":{},"sourceType":"module"}